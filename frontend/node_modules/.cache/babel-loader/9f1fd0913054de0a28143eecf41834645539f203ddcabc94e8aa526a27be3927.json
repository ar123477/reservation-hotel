{"ast":null,"code":"// src/services/api.js - CORRECTION DES FONCTIONS ROOMS\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Données mock pour le développement avec vraies images\nconst mockUsers = [{\n  id: 1,\n  email: 'admin@test.com',\n  name: 'Admin Test',\n  role: 'super_admin'\n}];\nconst mockHotels = [{\n  id: 1,\n  nom: \"Hôtel Sarakawa\",\n  adresse: \"Boulevard du Mono, Lomé\",\n  telephone: \"+228 22 21 45 00\",\n  email: \"reservation@sarakawa.tg\",\n  note: 4.5,\n  prix_min: 55000,\n  images: ['https://images.unsplash.com/photo-1566073771259-6a8506099945?w=500&h=300&fit=crop', 'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?w=500&h=300&fit=crop', 'https://images.unsplash.com/photo-1611892440504-42a792e24d32?w=500&h=300&fit=crop'],\n  description: \"Hôtel de luxe emblématique face à l'océan avec casino et golf. Cadre exceptionnel pour un séjour mémorable.\",\n  equipements: ['Casino', 'Golf', 'Piscine', 'Spa', 'Plage privée', 'Wi-Fi', 'Restaurant', 'Bar'],\n  ville: \"Lomé\"\n}, {\n  id: 2,\n  nom: \"Hôtel du 2 Février\",\n  adresse: \"Rue des Nimes, Lomé\",\n  telephone: \"+228 22 23 18 00\",\n  email: \"contact@hotel2fevrier.tg\",\n  note: 4.3,\n  prix_min: 45000,\n  images: ['https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?w=500&h=300&fit=crop', 'https://images.unsplash.com/photo-1584132967334-10e028bd69f7?w=500&h=300&fit=crop', 'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?w=500&h=300&fit=crop'],\n  description: \"Hôtel d'affaires moderne au cœur de la capitale. Idéal pour voyages professionnels.\",\n  equipements: ['Piscine', 'Salle de conférence', 'Restaurant', 'Wi-Fi', 'Fitness', 'Room Service'],\n  ville: \"Lomé\"\n}];\nconst mockRooms = {\n  1: [\n  // Chambres pour l'hôtel Sarakawa\n  {\n    id: 1,\n    hotelId: 1,\n    type_chambre: \"Chambre Standard\",\n    superficie: \"35m²\",\n    prix_nuit: 55000,\n    prix_heure: 18000,\n    capacite: \"2 personnes\",\n    image: 'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?w=400&h=250&fit=crop',\n    equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"TV écran plat\", \"Salle de bain privée\"]\n  }, {\n    id: 2,\n    hotelId: 1,\n    type_chambre: \"Suite Deluxe\",\n    superficie: \"60m²\",\n    prix_nuit: 85000,\n    prix_heure: 28000,\n    capacite: \"3 personnes\",\n    image: 'https://images.unsplash.com/photo-1584132967334-10e028bd69f7?w=400&h=250&fit=crop',\n    equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"TV écran plat\", \"Mini-bar\", \"Spa\", \"Vue mer\"]\n  }],\n  2: [\n  // Chambres pour l'hôtel 2 Février\n  {\n    id: 3,\n    hotelId: 2,\n    type_chambre: \"Chambre Affaires\",\n    superficie: \"30m²\",\n    prix_nuit: 45000,\n    prix_heure: 15000,\n    capacite: \"2 personnes\",\n    image: 'https://images.unsplash.com/photo-1611892440504-42a792e24d32?w=400&h=250&fit=crop',\n    equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"Bureau\", \"Salle de bain privée\"]\n  }]\n};\n\n// API d'authentification\nexport const authAPI = {\n  async login(email, password) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const user = mockUsers.find(u => u.email === email);\n    if (user && password === 'password') {\n      return {\n        token: 'mock-jwt-token-' + Date.now(),\n        user: user\n      };\n    }\n    throw new Error('Email ou mot de passe incorrect');\n  },\n  async register(userData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    const newUser = {\n      id: mockUsers.length + 1,\n      ...userData,\n      role: 'client'\n    };\n    return {\n      token: 'mock-jwt-token-' + Date.now(),\n      user: newUser\n    };\n  },\n  async getProfile() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Token d\\'accès requis');\n    }\n    return mockUsers[0];\n  }\n};\n\n// API des hôtels\nexport const hotelsAPI = {\n  async getHotels() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return mockHotels;\n  },\n  async getAll() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return mockHotels;\n  },\n  async getHotelById(id) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    const hotel = mockHotels.find(h => h.id === parseInt(id));\n    if (!hotel) throw new Error('Hôtel non trouvé');\n    return hotel;\n  },\n  // ALIAS pour compatibilité\n  async getById(id) {\n    return this.getHotelById(id);\n  }\n};\n\n// API des chambres - CORRECTION DES FONCTIONS\nexport const roomsAPI = {\n  async getRoomsByHotel(hotelId) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return mockRooms[parseInt(hotelId)] || [];\n  },\n  // CORRECTION : Cette fonction doit être définie correctement\n  async getByHotel(hotelId) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return mockRooms[parseInt(hotelId)] || [];\n  }\n};\n\n// API des réservations\nexport const reservationsAPI = {\n  async createReservation(reservationData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      id: Date.now(),\n      ...reservationData,\n      statut: 'confirmée',\n      dateCreation: new Date().toISOString()\n    };\n  },\n  async getUserReservations() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return [];\n  }\n};\n\n// API des paiements\nexport const paymentsAPI = {\n  async processPayment(paymentData) {\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    return {\n      success: true,\n      transactionId: 'txn_' + Date.now(),\n      message: 'Paiement réussi'\n    };\n  }\n};\n\n// API hôtel (alias pour hotelsAPI pour compatibilité)\nexport const hotelAPI = hotelsAPI;","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","mockUsers","id","email","name","role","mockHotels","nom","adresse","telephone","note","prix_min","images","description","equipements","ville","mockRooms","hotelId","type_chambre","superficie","prix_nuit","prix_heure","capacite","image","authAPI","login","password","Promise","resolve","setTimeout","user","find","u","token","Date","now","Error","register","userData","newUser","length","getProfile","localStorage","getItem","hotelsAPI","getHotels","getAll","getHotelById","hotel","h","parseInt","getById","roomsAPI","getRoomsByHotel","getByHotel","reservationsAPI","createReservation","reservationData","statut","dateCreation","toISOString","getUserReservations","paymentsAPI","processPayment","paymentData","success","transactionId","message","hotelAPI"],"sources":["C:/Users/HOME/Videos/reservation-hotel/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js - CORRECTION DES FONCTIONS ROOMS\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Données mock pour le développement avec vraies images\nconst mockUsers = [\n  {\n    id: 1,\n    email: 'admin@test.com',\n    name: 'Admin Test',\n    role: 'super_admin'\n  }\n];\n\nconst mockHotels = [\n  {\n    id: 1,\n    nom: \"Hôtel Sarakawa\",\n    adresse: \"Boulevard du Mono, Lomé\",\n    telephone: \"+228 22 21 45 00\",\n    email: \"reservation@sarakawa.tg\",\n    note: 4.5,\n    prix_min: 55000,\n    images: [\n      'https://images.unsplash.com/photo-1566073771259-6a8506099945?w=500&h=300&fit=crop',\n      'https://images.unsplash.com/photo-1551882547-ff40c63fe5fa?w=500&h=300&fit=crop',\n      'https://images.unsplash.com/photo-1611892440504-42a792e24d32?w=500&h=300&fit=crop'\n    ],\n    description: \"Hôtel de luxe emblématique face à l'océan avec casino et golf. Cadre exceptionnel pour un séjour mémorable.\",\n    equipements: ['Casino', 'Golf', 'Piscine', 'Spa', 'Plage privée', 'Wi-Fi', 'Restaurant', 'Bar'],\n    ville: \"Lomé\"\n  },\n  {\n    id: 2,\n    nom: \"Hôtel du 2 Février\",\n    adresse: \"Rue des Nimes, Lomé\",\n    telephone: \"+228 22 23 18 00\",\n    email: \"contact@hotel2fevrier.tg\",\n    note: 4.3,\n    prix_min: 45000,\n    images: [\n      'https://images.unsplash.com/photo-1520250497591-112f2f40a3f4?w=500&h=300&fit=crop',\n      'https://images.unsplash.com/photo-1584132967334-10e028bd69f7?w=500&h=300&fit=crop',\n      'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?w=500&h=300&fit=crop'\n    ],\n    description: \"Hôtel d'affaires moderne au cœur de la capitale. Idéal pour voyages professionnels.\",\n    equipements: ['Piscine', 'Salle de conférence', 'Restaurant', 'Wi-Fi', 'Fitness', 'Room Service'],\n    ville: \"Lomé\"\n  }\n];\n\nconst mockRooms = {\n  1: [ // Chambres pour l'hôtel Sarakawa\n    {\n      id: 1,\n      hotelId: 1,\n      type_chambre: \"Chambre Standard\",\n      superficie: \"35m²\",\n      prix_nuit: 55000,\n      prix_heure: 18000,\n      capacite: \"2 personnes\",\n      image: 'https://images.unsplash.com/photo-1631049307264-da0ec9d70304?w=400&h=250&fit=crop',\n      equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"TV écran plat\", \"Salle de bain privée\"]\n    },\n    {\n      id: 2,\n      hotelId: 1,\n      type_chambre: \"Suite Deluxe\",\n      superficie: \"60m²\",\n      prix_nuit: 85000,\n      prix_heure: 28000,\n      capacite: \"3 personnes\",\n      image: 'https://images.unsplash.com/photo-1584132967334-10e028bd69f7?w=400&h=250&fit=crop',\n      equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"TV écran plat\", \"Mini-bar\", \"Spa\", \"Vue mer\"]\n    }\n  ],\n  2: [ // Chambres pour l'hôtel 2 Février\n    {\n      id: 3,\n      hotelId: 2,\n      type_chambre: \"Chambre Affaires\",\n      superficie: \"30m²\",\n      prix_nuit: 45000,\n      prix_heure: 15000,\n      capacite: \"2 personnes\",\n      image: 'https://images.unsplash.com/photo-1611892440504-42a792e24d32?w=400&h=250&fit=crop',\n      equipements: [\"Wi-Fi gratuit\", \"Climatisation\", \"Bureau\", \"Salle de bain privée\"]\n    }\n  ]\n};\n\n// API d'authentification\nexport const authAPI = {\n  async login(email, password) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const user = mockUsers.find(u => u.email === email);\n    if (user && password === 'password') {\n      return {\n        token: 'mock-jwt-token-' + Date.now(),\n        user: user\n      };\n    }\n    throw new Error('Email ou mot de passe incorrect');\n  },\n\n  async register(userData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    \n    const newUser = {\n      id: mockUsers.length + 1,\n      ...userData,\n      role: 'client'\n    };\n    \n    return {\n      token: 'mock-jwt-token-' + Date.now(),\n      user: newUser\n    };\n  },\n\n  async getProfile() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const token = localStorage.getItem('token');\n    if (!token) {\n      throw new Error('Token d\\'accès requis');\n    }\n\n    return mockUsers[0];\n  }\n};\n\n// API des hôtels\nexport const hotelsAPI = {\n  async getHotels() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return mockHotels;\n  },\n\n  async getAll() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return mockHotels;\n  },\n\n  async getHotelById(id) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    const hotel = mockHotels.find(h => h.id === parseInt(id));\n    if (!hotel) throw new Error('Hôtel non trouvé');\n    return hotel;\n  },\n\n  // ALIAS pour compatibilité\n  async getById(id) {\n    return this.getHotelById(id);\n  }\n};\n\n// API des chambres - CORRECTION DES FONCTIONS\nexport const roomsAPI = {\n  async getRoomsByHotel(hotelId) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return mockRooms[parseInt(hotelId)] || [];\n  },\n\n  // CORRECTION : Cette fonction doit être définie correctement\n  async getByHotel(hotelId) {\n    await new Promise(resolve => setTimeout(resolve, 300));\n    return mockRooms[parseInt(hotelId)] || [];\n  }\n};\n\n// API des réservations\nexport const reservationsAPI = {\n  async createReservation(reservationData) {\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    return {\n      id: Date.now(),\n      ...reservationData,\n      statut: 'confirmée',\n      dateCreation: new Date().toISOString()\n    };\n  },\n\n  async getUserReservations() {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return [];\n  }\n};\n\n// API des paiements\nexport const paymentsAPI = {\n  async processPayment(paymentData) {\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    return {\n      success: true,\n      transactionId: 'txn_' + Date.now(),\n      message: 'Paiement réussi'\n    };\n  }\n};\n\n// API hôtel (alias pour hotelsAPI pour compatibilité)\nexport const hotelAPI = hotelsAPI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}