{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Videos\\\\reservation-hotel\\\\frontend\\\\src\\\\pages\\\\Reservation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../services/auth';\nimport { hotelsAPI, roomsAPI, reservationsAPI } from '../services/api';\nimport { useApiData } from '../hooks/useApiData';\nimport { adaptHotelData, adaptRoomData } from '../utils/dataAdapter';\nimport ReservationType from '../components/reservation/ReservationType';\nimport DateSelector from '../components/reservation/DateSelector';\nimport ClientForm from '../components/reservation/ClientForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reservation = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const searchParams = new URLSearchParams(location.search);\n  const {\n    state\n  } = location;\n\n  // Récupération des infos client depuis la page d'identification ou depuis le compte\n  const initialClient = (state === null || state === void 0 ? void 0 : state.client) || {\n    nom: (user === null || user === void 0 ? void 0 : user.nom) || '',\n    prenom: (user === null || user === void 0 ? void 0 : user.prenom) || '',\n    email: (user === null || user === void 0 ? void 0 : user.email) || '',\n    telephone: (user === null || user === void 0 ? void 0 : user.telephone) || '',\n    pays: 'Togo',\n    notes: ''\n  };\n  const [reservation, setReservation] = useState({\n    hotel: null,\n    room: null,\n    type: searchParams.get('type') || 'classique',\n    dates: {\n      arrivee: '',\n      depart: '',\n      heures: 0\n    },\n    client: initialClient,\n    montantTotal: 0\n  });\n  const [currentStep, setCurrentStep] = useState(1);\n  const [calculating, setCalculating] = useState(false);\n  const {\n    data: hotels\n  } = useApiData(() => hotelsAPI.getAll(), backendData => backendData.map(adaptHotelData));\n  const {\n    data: roomTypes\n  } = useApiData(() => roomsAPI.getTypes(), backendData => backendData.map(adaptRoomData));\n  useEffect(() => {\n    const hotelId = searchParams.get('hotel');\n    const roomId = searchParams.get('room');\n    if (hotelId && hotels) {\n      const selectedHotel = hotels.find(h => h.id === parseInt(hotelId));\n      if (selectedHotel) setReservation(prev => ({\n        ...prev,\n        hotel: selectedHotel\n      }));\n    }\n    if (roomId && roomTypes) {\n      const selectedRoom = roomTypes.find(r => r.id === parseInt(roomId));\n      if (selectedRoom) setReservation(prev => ({\n        ...prev,\n        room: selectedRoom\n      }));\n    }\n  }, [location.search, hotels, roomTypes]);\n  useEffect(() => {\n    if (reservation.room && reservation.dates.arrivee) {\n      calculateTotal();\n    }\n  }, [reservation.room, reservation.type, reservation.dates]);\n  const calculateTotal = () => {\n    setCalculating(true);\n    setTimeout(() => {\n      let total = 0;\n      const {\n        room,\n        type,\n        dates\n      } = reservation;\n      if (type === 'horaire') {\n        total = dates.heures * room.prix_heure;\n      } else {\n        const dateArrivee = new Date(dates.arrivee);\n        const dateDepart = new Date(dates.depart);\n        const jours = Math.ceil((dateDepart - dateArrivee) / (1000 * 60 * 60 * 24));\n        total = jours * room.prix_nuit;\n      }\n      setReservation(prev => ({\n        ...prev,\n        montantTotal: Math.round(total * 100) / 100\n      }));\n      setCalculating(false);\n    }, 500);\n  };\n  const validateStep1 = () => {\n    return reservation.dates.arrivee && (reservation.type === 'classique' ? reservation.dates.depart : reservation.dates.heures > 0);\n  };\n  const validateStep2 = () => {\n    const {\n      nom,\n      prenom,\n      email,\n      telephone\n    } = reservation.client;\n    return nom && prenom && email && telephone;\n  };\n  const handleReservationSubmit = async () => {\n    try {\n      const reservationData = {\n        hotel_id: reservation.hotel.id,\n        type_chambre: reservation.room.type,\n        date_arrivee: reservation.dates.arrivee,\n        date_depart: reservation.type === 'classique' ? reservation.dates.depart : null,\n        duree_heures: reservation.type === 'horaire' ? reservation.dates.heures : null,\n        type_reservation: reservation.type,\n        client: reservation.client,\n        montant_total: reservation.montantTotal\n      };\n      const result = await reservationsAPI.create(reservationData);\n      navigate('/choix-paiement', {\n        state: {\n          reservation: {\n            ...reservation,\n            id: result.id,\n            numero_reservation: result.numero_reservation\n          }\n        }\n      });\n    } catch (error) {\n      alert(`Erreur lors de la réservation: ${error.message}`);\n    }\n  };\n  const handleNextStep = () => {\n    if (currentStep === 1 && validateStep1()) {\n      setCurrentStep(2);\n    } else if (currentStep === 2 && validateStep2()) {\n      handleReservationSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-page\",\n    children: [!user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box\",\n      children: \"Vous n'\\xEAtes pas connect\\xE9. Veuillez remplir tous les champs pour finaliser votre r\\xE9servation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), currentStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReservationType, {\n        type: reservation.type,\n        onTypeChange: newType => setReservation(prev => ({\n          ...prev,\n          type: newType\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateSelector, {\n        selectedDates: reservation.dates,\n        onDatesChange: dates => setReservation(prev => ({\n          ...prev,\n          dates\n        })),\n        type: reservation.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextStep,\n        className: \"btn-primary\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), currentStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ClientForm, {\n        client: reservation.client,\n        setClient: client => setReservation(prev => ({\n          ...prev,\n          client\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-box\",\n        children: [\"Montant total : \", reservation.montantTotal.toLocaleString(), \" FCFA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextStep,\n        className: \"btn-success\",\n        children: \"Confirmer la r\\xE9servation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Reservation, \"ybe0JbeUBEaA6HgR1Qcc5nf4muI=\", false, function () {\n  return [useLocation, useNavigate, useAuth, useApiData, useApiData];\n});\n_c = Reservation;\nexport default Reservation;\nvar _c;\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useAuth","hotelsAPI","roomsAPI","reservationsAPI","useApiData","adaptHotelData","adaptRoomData","ReservationType","DateSelector","ClientForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Reservation","_s","location","navigate","user","searchParams","URLSearchParams","search","state","initialClient","client","nom","prenom","email","telephone","pays","notes","reservation","setReservation","hotel","room","type","get","dates","arrivee","depart","heures","montantTotal","currentStep","setCurrentStep","calculating","setCalculating","data","hotels","getAll","backendData","map","roomTypes","getTypes","hotelId","roomId","selectedHotel","find","h","id","parseInt","prev","selectedRoom","r","calculateTotal","setTimeout","total","prix_heure","dateArrivee","Date","dateDepart","jours","Math","ceil","prix_nuit","round","validateStep1","validateStep2","handleReservationSubmit","reservationData","hotel_id","type_chambre","date_arrivee","date_depart","duree_heures","type_reservation","montant_total","result","create","numero_reservation","error","alert","message","handleNextStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTypeChange","newType","selectedDates","onDatesChange","onClick","setClient","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Videos/reservation-hotel/frontend/src/pages/Reservation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../services/auth';\r\nimport { hotelsAPI, roomsAPI, reservationsAPI } from '../services/api';\r\nimport { useApiData } from '../hooks/useApiData';\r\nimport { adaptHotelData, adaptRoomData } from '../utils/dataAdapter';\r\nimport ReservationType from '../components/reservation/ReservationType';\r\nimport DateSelector from '../components/reservation/DateSelector';\r\nimport ClientForm from '../components/reservation/ClientForm';\r\n\r\nconst Reservation = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const { state } = location;\r\n\r\n  // Récupération des infos client depuis la page d'identification ou depuis le compte\r\n  const initialClient = state?.client || {\r\n    nom: user?.nom || '',\r\n    prenom: user?.prenom || '',\r\n    email: user?.email || '',\r\n    telephone: user?.telephone || '',\r\n    pays: 'Togo',\r\n    notes: ''\r\n  };\r\n\r\n  const [reservation, setReservation] = useState({\r\n    hotel: null,\r\n    room: null,\r\n    type: searchParams.get('type') || 'classique',\r\n    dates: {\r\n      arrivee: '',\r\n      depart: '',\r\n      heures: 0\r\n    },\r\n    client: initialClient,\r\n    montantTotal: 0\r\n  });\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [calculating, setCalculating] = useState(false);\r\n\r\n  const { data: hotels } = useApiData(\r\n    () => hotelsAPI.getAll(),\r\n    (backendData) => backendData.map(adaptHotelData)\r\n  );\r\n\r\n  const { data: roomTypes } = useApiData(\r\n    () => roomsAPI.getTypes(),\r\n    (backendData) => backendData.map(adaptRoomData)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const hotelId = searchParams.get('hotel');\r\n    const roomId = searchParams.get('room');\r\n\r\n    if (hotelId && hotels) {\r\n      const selectedHotel = hotels.find(h => h.id === parseInt(hotelId));\r\n      if (selectedHotel) setReservation(prev => ({ ...prev, hotel: selectedHotel }));\r\n    }\r\n\r\n    if (roomId && roomTypes) {\r\n      const selectedRoom = roomTypes.find(r => r.id === parseInt(roomId));\r\n      if (selectedRoom) setReservation(prev => ({ ...prev, room: selectedRoom }));\r\n    }\r\n  }, [location.search, hotels, roomTypes]);\r\n\r\n  useEffect(() => {\r\n    if (reservation.room && reservation.dates.arrivee) {\r\n      calculateTotal();\r\n    }\r\n  }, [reservation.room, reservation.type, reservation.dates]);\r\n\r\n  const calculateTotal = () => {\r\n    setCalculating(true);\r\n\r\n    setTimeout(() => {\r\n      let total = 0;\r\n      const { room, type, dates } = reservation;\r\n\r\n      if (type === 'horaire') {\r\n        total = dates.heures * room.prix_heure;\r\n      } else {\r\n        const dateArrivee = new Date(dates.arrivee);\r\n        const dateDepart = new Date(dates.depart);\r\n        const jours = Math.ceil((dateDepart - dateArrivee) / (1000 * 60 * 60 * 24));\r\n        total = jours * room.prix_nuit;\r\n      }\r\n\r\n      setReservation(prev => ({ ...prev, montantTotal: Math.round(total * 100) / 100 }));\r\n      setCalculating(false);\r\n    }, 500);\r\n  };\r\n\r\n  const validateStep1 = () => {\r\n    return reservation.dates.arrivee && (\r\n      reservation.type === 'classique' ? reservation.dates.depart : reservation.dates.heures > 0\r\n    );\r\n  };\r\n\r\n  const validateStep2 = () => {\r\n    const { nom, prenom, email, telephone } = reservation.client;\r\n    return nom && prenom && email && telephone;\r\n  };\r\n\r\n  const handleReservationSubmit = async () => {\r\n    try {\r\n      const reservationData = {\r\n        hotel_id: reservation.hotel.id,\r\n        type_chambre: reservation.room.type,\r\n        date_arrivee: reservation.dates.arrivee,\r\n        date_depart: reservation.type === 'classique' ? reservation.dates.depart : null,\r\n        duree_heures: reservation.type === 'horaire' ? reservation.dates.heures : null,\r\n        type_reservation: reservation.type,\r\n        client: reservation.client,\r\n        montant_total: reservation.montantTotal\r\n      };\r\n\r\n      const result = await reservationsAPI.create(reservationData);\r\n\r\n      navigate('/choix-paiement', {\r\n        state: {\r\n          reservation: {\r\n            ...reservation,\r\n            id: result.id,\r\n            numero_reservation: result.numero_reservation\r\n          }\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      alert(`Erreur lors de la réservation: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    if (currentStep === 1 && validateStep1()) {\r\n      setCurrentStep(2);\r\n    } else if (currentStep === 2 && validateStep2()) {\r\n      handleReservationSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservation-page\">\r\n      {!user && (\r\n        <div className=\"info-box\">\r\n          Vous n'êtes pas connecté. Veuillez remplir tous les champs pour finaliser votre réservation.\r\n        </div>\r\n      )}\r\n\r\n      {/* Étape 1 : type et dates */}\r\n      {currentStep === 1 && (\r\n        <>\r\n          <ReservationType\r\n            type={reservation.type}\r\n            onTypeChange={(newType) => setReservation(prev => ({ ...prev, type: newType }))}\r\n          />\r\n          <DateSelector\r\n            selectedDates={reservation.dates}\r\n            onDatesChange={(dates) => setReservation(prev => ({ ...prev, dates }))}\r\n            type={reservation.type}\r\n          />\r\n          <button onClick={handleNextStep} className=\"btn-primary\">Suivant</button>\r\n        </>\r\n      )}\r\n\r\n      {/* Étape 2 : infos client */}\r\n      {currentStep === 2 && (\r\n        <>\r\n          <ClientForm\r\n            client={reservation.client}\r\n            setClient={(client) => setReservation(prev => ({ ...prev, client }))}\r\n          />\r\n          <div className=\"total-box\">\r\n            Montant total : {reservation.montantTotal.toLocaleString()} FCFA\r\n          </div>\r\n          <button onClick={handleNextStep} className=\"btn-success\">Confirmer la réservation</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}