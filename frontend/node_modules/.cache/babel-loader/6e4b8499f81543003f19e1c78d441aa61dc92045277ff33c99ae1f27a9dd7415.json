{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Videos\\\\reservation-hotel\\\\frontend\\\\src\\\\pages\\\\Reservation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../services/auth';\nimport { hotelsAPI, roomsAPI, reservationsAPI } from '../services/api';\nimport { useApiData } from '../hooks/useApiData';\nimport { adaptHotelData, adaptRoomData } from '../utils/dataAdapter';\nimport ReservationType from '../components/reservation/ReservationType';\nimport DateSelector from '../components/reservation/DateSelector';\nimport ClientForm from '../components/reservation/ClientForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Reservation = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const searchParams = new URLSearchParams(location.search);\n  const [reservation, setReservation] = useState({\n    hotel: null,\n    room: null,\n    type: searchParams.get('type') || 'classique',\n    dates: {\n      arrivee: '',\n      depart: '',\n      heures: 0\n    },\n    client: {\n      nom: (user === null || user === void 0 ? void 0 : user.nom) || '',\n      prenom: (user === null || user === void 0 ? void 0 : user.prenom) || '',\n      email: (user === null || user === void 0 ? void 0 : user.email) || '',\n      telephone: (user === null || user === void 0 ? void 0 : user.telephone) || '',\n      pays: 'Togo',\n      notes: ''\n    },\n    montantTotal: 0\n  });\n  const [currentStep, setCurrentStep] = useState(1);\n  const [calculating, setCalculating] = useState(false);\n  const {\n    data: hotels\n  } = useApiData(() => hotelsAPI.getAll(), backendData => backendData.map(adaptHotelData));\n  const {\n    data: roomTypes\n  } = useApiData(() => roomsAPI.getTypes(), backendData => backendData.map(adaptRoomData));\n  useEffect(() => {\n    const hotelId = searchParams.get('hotel');\n    const roomId = searchParams.get('room');\n    if (hotelId && hotels) {\n      const selectedHotel = hotels.find(h => h.id === parseInt(hotelId));\n      if (selectedHotel) setReservation(prev => ({\n        ...prev,\n        hotel: selectedHotel\n      }));\n    }\n    if (roomId && roomTypes) {\n      const selectedRoom = roomTypes.find(r => r.id === parseInt(roomId));\n      if (selectedRoom) setReservation(prev => ({\n        ...prev,\n        room: selectedRoom\n      }));\n    }\n  }, [location.search, hotels, roomTypes]);\n  useEffect(() => {\n    if (reservation.room && reservation.dates.arrivee) {\n      calculateTotal();\n    }\n  }, [reservation.room, reservation.type, reservation.dates]);\n  const calculateTotal = () => {\n    setCalculating(true);\n    setTimeout(() => {\n      let total = 0;\n      const {\n        room,\n        type,\n        dates\n      } = reservation;\n      if (type === 'horaire') {\n        total = dates.heures * room.prix_heure;\n      } else {\n        const dateArrivee = new Date(dates.arrivee);\n        const dateDepart = new Date(dates.depart);\n        const jours = Math.ceil((dateDepart - dateArrivee) / (1000 * 60 * 60 * 24));\n        total = jours * room.prix_nuit;\n      }\n      setReservation(prev => ({\n        ...prev,\n        montantTotal: Math.round(total * 100) / 100\n      }));\n      setCalculating(false);\n    }, 500);\n  };\n  const validateStep1 = () => {\n    return reservation.dates.arrivee && (reservation.type === 'classique' ? reservation.dates.depart : reservation.dates.heures > 0);\n  };\n  const validateStep2 = () => {\n    const {\n      nom,\n      prenom,\n      email,\n      telephone\n    } = reservation.client;\n    return nom && prenom && email && telephone;\n  };\n  const handleReservationSubmit = async () => {\n    try {\n      const reservationData = {\n        hotel_id: reservation.hotel.id,\n        type_chambre: reservation.room.type,\n        date_arrivee: reservation.dates.arrivee,\n        date_depart: reservation.type === 'classique' ? reservation.dates.depart : null,\n        duree_heures: reservation.type === 'horaire' ? reservation.dates.heures : null,\n        type_reservation: reservation.type,\n        client: reservation.client,\n        montant_total: reservation.montantTotal\n      };\n      const result = await reservationsAPI.create(reservationData);\n      navigate('/paiement', {\n        state: {\n          reservation: {\n            ...reservation,\n            id: result.id,\n            numero_reservation: result.numero_reservation\n          }\n        }\n      });\n    } catch (error) {\n      alert(`Erreur lors de la rÃ©servation: ${error.message}`);\n    }\n  };\n  const handleNextStep = () => {\n    if (currentStep === 1 && validateStep1()) {\n      setCurrentStep(2);\n    } else if (currentStep === 2 && validateStep2()) {\n      handleReservationSubmit();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservation-page\",\n    children: [!user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-box\",\n      children: \"Vous n'\\xEAtes pas connect\\xE9. Veuillez remplir tous les champs pour finaliser votre r\\xE9servation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this), currentStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ReservationType, {\n        type: reservation.type,\n        onTypeChange: newType => setReservation(prev => ({\n          ...prev,\n          type: newType\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DateSelector, {\n        selectedDates: reservation.dates,\n        onDatesChange: dates => setReservation(prev => ({\n          ...prev,\n          dates\n        })),\n        type: reservation.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextStep,\n        className: \"btn-primary\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), currentStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ClientForm, {\n        client: reservation.client,\n        setClient: client => setReservation(prev => ({\n          ...prev,\n          client\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total-box\",\n        children: [\"Montant total : \", reservation.montantTotal.toLocaleString(), \" FCFA\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextStep,\n        className: \"btn-success\",\n        children: \"Confirmer la r\\xE9servation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Reservation, \"66o1zJzkzi6rX2tmHD3D+wpe0sc=\", false, function () {\n  return [useLocation, useNavigate, useAuth, useApiData, useApiData];\n});\n_c = Reservation;\nexport default Reservation;\nvar _c;\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","useAuth","hotelsAPI","roomsAPI","reservationsAPI","useApiData","adaptHotelData","adaptRoomData","ReservationType","DateSelector","ClientForm","jsxDEV","_jsxDEV","Fragment","_Fragment","Reservation","_s","location","navigate","user","searchParams","URLSearchParams","search","reservation","setReservation","hotel","room","type","get","dates","arrivee","depart","heures","client","nom","prenom","email","telephone","pays","notes","montantTotal","currentStep","setCurrentStep","calculating","setCalculating","data","hotels","getAll","backendData","map","roomTypes","getTypes","hotelId","roomId","selectedHotel","find","h","id","parseInt","prev","selectedRoom","r","calculateTotal","setTimeout","total","prix_heure","dateArrivee","Date","dateDepart","jours","Math","ceil","prix_nuit","round","validateStep1","validateStep2","handleReservationSubmit","reservationData","hotel_id","type_chambre","date_arrivee","date_depart","duree_heures","type_reservation","montant_total","result","create","state","numero_reservation","error","alert","message","handleNextStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onTypeChange","newType","selectedDates","onDatesChange","onClick","setClient","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/HOME/Videos/reservation-hotel/frontend/src/pages/Reservation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../services/auth';\r\nimport { hotelsAPI, roomsAPI, reservationsAPI } from '../services/api';\r\nimport { useApiData } from '../hooks/useApiData';\r\nimport { adaptHotelData, adaptRoomData } from '../utils/dataAdapter';\r\nimport ReservationType from '../components/reservation/ReservationType';\r\nimport DateSelector from '../components/reservation/DateSelector';\r\nimport ClientForm from '../components/reservation/ClientForm';\r\n\r\nconst Reservation = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const searchParams = new URLSearchParams(location.search);\r\n\r\n  const [reservation, setReservation] = useState({\r\n    hotel: null,\r\n    room: null,\r\n    type: searchParams.get('type') || 'classique',\r\n    dates: {\r\n      arrivee: '',\r\n      depart: '',\r\n      heures: 0\r\n    },\r\n    client: {\r\n      nom: user?.nom || '',\r\n      prenom: user?.prenom || '',\r\n      email: user?.email || '',\r\n      telephone: user?.telephone || '',\r\n      pays: 'Togo',\r\n      notes: ''\r\n    },\r\n    montantTotal: 0\r\n  });\r\n\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [calculating, setCalculating] = useState(false);\r\n\r\n  const { data: hotels } = useApiData(\r\n    () => hotelsAPI.getAll(),\r\n    (backendData) => backendData.map(adaptHotelData)\r\n  );\r\n\r\n  const { data: roomTypes } = useApiData(\r\n    () => roomsAPI.getTypes(),\r\n    (backendData) => backendData.map(adaptRoomData)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const hotelId = searchParams.get('hotel');\r\n    const roomId = searchParams.get('room');\r\n\r\n    if (hotelId && hotels) {\r\n      const selectedHotel = hotels.find(h => h.id === parseInt(hotelId));\r\n      if (selectedHotel) setReservation(prev => ({ ...prev, hotel: selectedHotel }));\r\n    }\r\n\r\n    if (roomId && roomTypes) {\r\n      const selectedRoom = roomTypes.find(r => r.id === parseInt(roomId));\r\n      if (selectedRoom) setReservation(prev => ({ ...prev, room: selectedRoom }));\r\n    }\r\n  }, [location.search, hotels, roomTypes]);\r\n\r\n  useEffect(() => {\r\n    if (reservation.room && reservation.dates.arrivee) {\r\n      calculateTotal();\r\n    }\r\n  }, [reservation.room, reservation.type, reservation.dates]);\r\n\r\n  const calculateTotal = () => {\r\n    setCalculating(true);\r\n\r\n    setTimeout(() => {\r\n      let total = 0;\r\n      const { room, type, dates } = reservation;\r\n\r\n      if (type === 'horaire') {\r\n        total = dates.heures * room.prix_heure;\r\n      } else {\r\n        const dateArrivee = new Date(dates.arrivee);\r\n        const dateDepart = new Date(dates.depart);\r\n        const jours = Math.ceil((dateDepart - dateArrivee) / (1000 * 60 * 60 * 24));\r\n        total = jours * room.prix_nuit;\r\n      }\r\n\r\n      setReservation(prev => ({ ...prev, montantTotal: Math.round(total * 100) / 100 }));\r\n      setCalculating(false);\r\n    }, 500);\r\n  };\r\n\r\n  const validateStep1 = () => {\r\n    return reservation.dates.arrivee && (\r\n      reservation.type === 'classique' ? reservation.dates.depart : reservation.dates.heures > 0\r\n    );\r\n  };\r\n\r\n  const validateStep2 = () => {\r\n    const { nom, prenom, email, telephone } = reservation.client;\r\n    return nom && prenom && email && telephone;\r\n  };\r\n\r\n  const handleReservationSubmit = async () => {\r\n    try {\r\n      const reservationData = {\r\n        hotel_id: reservation.hotel.id,\r\n        type_chambre: reservation.room.type,\r\n        date_arrivee: reservation.dates.arrivee,\r\n        date_depart: reservation.type === 'classique' ? reservation.dates.depart : null,\r\n        duree_heures: reservation.type === 'horaire' ? reservation.dates.heures : null,\r\n        type_reservation: reservation.type,\r\n        client: reservation.client,\r\n        montant_total: reservation.montantTotal\r\n      };\r\n\r\n      const result = await reservationsAPI.create(reservationData);\r\n\r\n      navigate('/paiement', {\r\n        state: {\r\n          reservation: {\r\n            ...reservation,\r\n            id: result.id,\r\n            numero_reservation: result.numero_reservation\r\n          }\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      alert(`Erreur lors de la rÃ©servation: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    if (currentStep === 1 && validateStep1()) {\r\n      setCurrentStep(2);\r\n    } else if (currentStep === 2 && validateStep2()) {\r\n      handleReservationSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reservation-page\">\r\n      {!user && (\r\n        <div className=\"info-box\">\r\n          Vous n'Ãªtes pas connectÃ©. Veuillez remplir tous les champs pour finaliser votre rÃ©servation.\r\n        </div>\r\n      )}\r\n\r\n      {/* Ãtape 1 : type et dates */}\r\n      {currentStep === 1 && (\r\n        <>\r\n          <ReservationType\r\n            type={reservation.type}\r\n            onTypeChange={(newType) => setReservation(prev => ({ ...prev, type: newType }))}\r\n          />\r\n          <DateSelector\r\n            selectedDates={reservation.dates}\r\n            onDatesChange={(dates) => setReservation(prev => ({ ...prev, dates }))}\r\n            type={reservation.type}\r\n          />\r\n          <button onClick={handleNextStep} className=\"btn-primary\">Suivant</button>\r\n        </>\r\n      )}\r\n\r\n      {/* Ãtape 2 : infos client */}\r\n      {currentStep === 2 && (\r\n        <>\r\n          <ClientForm\r\n            client={reservation.client}\r\n            setClient={(client) => setReservation(prev => ({ ...prev, client }))}\r\n          />\r\n          <div className=\"total-box\">\r\n            Montant total : {reservation.montantTotal.toLocaleString()} FCFA\r\n          </div>\r\n          <button onClick={handleNextStep} className=\"btn-success\">Confirmer la rÃ©servation</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reservation;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}